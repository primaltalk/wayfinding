{"version":3,"sources":["../src/jquery.wayfinding.js"],"names":["$","defaults","color","radius","speed","width","fill","height","dataStore","fn","wayfinding","action","options","callback","passed","obj","maps","defaultMap","startpoint","portalSegments","solution","result","drawing","escapeSelector","sel","replace","interpolateValue","oldValue","newValue","i","steps","CheckMapEmpty","value","message","toString","CheckMapDuplicates","CheckMapBadDefault","checkIds","el","mapNum","checkNum","reassign","defaultMapValid","status","find","hide","end","append","loadMessage","length","id","text","errorMessage","JSON","stringify","makePin","x","y","type","indicator","pin","circle","locationIndicator","symbolPath","document","createElementNS","attr","setAttribute","appendChild","buildDataStore","map","path","doorId","x1","y1","x2","y2","matches","portal","portalId","p","each","floor","r","Infinity","d","m","n","e","l","Math","sqrt","pow","c","q","push","index","segment","indexOf","slice","split","mate","join","matched","grep","buildPortals","segmentOuterNum","segmentInnerNum","outerSegment","innerSegment","pathOuterNum","pathInnerNum","portalNum","pathNum","t","a","f","g","j","k","getDoorPaths","door","doorANum","doorBNum","doorPaths","paths","recursiveSearch","segmentType","segmentFloor","tryPath","o","tryPortal","accessibleRoute","inArray","ia","ib","generateRoutes","sourceInfo","sourcemapNum","pathId","backTrack","step","getShortestRoute","destInfo","destinationmapNum","reversePathStart","minPath","endpoint","reverse","build","establishDataStore","onReadyCallback","dataStoreCache","cacheUrl","getJSON","response","fail","setStartPoint","point","start","attachPinLocation","remove","showLocation","startMap","children","has","last","Number","after","setEndPoint","endPoint","endMap","first","getOptions","optionsPrior","data","extend","undefined","metadata","setOptions","cleanupSVG","svg","prop","oldID","initializePanZoom","panzoom","minScale","contain","cursor","on","stopImmediatePropagation","activateSVG","svgDiv","$dataGroup","parent","is","click","event","trigger","roomId","preventDefault","css","pinchToZoom","switchFloor","mapId","fadeIn","level","pathLength","routeLength","hidePath","panzoomWithViewBoxCoords","cssDiv","w","h","parseFloat","viewBox","getAttribute","viewX","viewY","viewW","viewH","cssW","cssH","scale","min","bcX","bcY","bcx","bcy","fx","fy","animatePath","drawingSegment","pathRect","drawLength","oldViewBox","animationDuration","pad","zoomPadding","duration","oldView","newView","adjustIn","current","old","target","count","setTimeout","zoomIn","X","Y","W","H","adjustOut","zoom","repeat","console","info","mapIdx","style","stroke","strokeWidth","transition","WebkitTransition","strokeDasharray","strokeDashoffset","getBBox","zoomToRoute","one","floorChangeAnimationDelay","routeTo","destination","draw","stepNum","portalsEntered","lastStep","ax","ay","bx","by","aDX","aDY","bDX","bDY","cx","cy","px","py","curve","nx","ny","thisPath","pick","removeAttr","Array","warn","splice","newPath","classList","add","attachPointSvg","startPin","destinationPin","before","replaceLoadScreen","displayNum","show","initialize","cb","mapsProcessed","load","html","svgHandle"],"mappings":"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","file":"jquery.wayfinding.js","sourcesContent":["/*global document, jQuery*/\n/*jslint devel: true, browser: true, windows: true, plusplus: true, maxerr: 50, indent: 4 */\n\n/**\n * @preserve\n * Wayfinding v2.0.0\n * https://github.com/ucdavis/wayfinding\n *\n * Copyright (c) 2010-2014 University of California Regents\n * Licensed under GNU General Public License v2\n * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n *\n * Date: 2014-12-02\n *\n * @module wayfinding\n * @main wayfinding\n * @namespace wayfinding\n * @version 2.0.0\n * @requires jQuery\n *\n */\n\n//  <![CDATA[\n'use strict';\n\nimport jQuery from 'jquery';\n\n(function ($) {\n\n\t/**\n\t * @typedef defaults\n\t * @memberOf wayfinding\n\t * @type {object}\n\t * @property {map[]} maps collection of maps to be used by wayfinding\n\t * @property {path} path collection of behavior and styling for the solution path\n\t * @property {string|function} startpoint either a string identifier for\n\t * the startpoint or a function that returns the same\n\t * @property {string|function} endpoint either a string identifier for the\n\t * endpoint or a function that returns the same\n\t * @property {boolean} accessibleRoute if true will avoid routes that use stairs\n\t * @property {string|function} defaultMap either a string idenfier for the\n\t * map to show upon load, or a function that returns the same\n\t * @property {string} loadMessage the message to show while the maps are bring loaded\n\t * @property {null|object|string} datastoreCache [description]\n\t * @property {boolean} showLocation [description]\n\t * @property {object} locationIndicator [description]\n\t * @property {boolean} pinchToZoom [description]\n\t * @property {boolean} zoomToRoute [description]\n\t * @property {integer} zoomPadding [description]\n\t * @property {integer} floorChangeAnimationDelay [description]\n\t */\n\n\t/**\n\t * @todo verify that endpoint can take both string and function, there is\n\t * some code in place for this\n\t */\n\n\tvar defaults = {\n\t\t/**\n\t\t * @typedef map\n\t\t * @memberOf wayfinding\n\t\t * @type object\n\t\t * @property {string} path relative URL to load the map from\n\t\t * @property {string} id the identifier by which the map is referenced by other maps\n\t\t */\n\t\t'maps': [{'path': 'floorplan.svg', 'id': 'map.1'}],\n\t\t/**\n\t\t * @typedef path\n\t\t * @memberOf wayfinding\n\t\t * @typedef {object}\n\t\t * @property {string} color any valid CSS color\n\t\t * @property {integer} radius the turn ration in pixels to apply to the solution path\n\t\t * @property {integer} speed the speed at which the solution path will be drawn\n\t\t * @property {integer} width the width in pixels of the solution path\n\t\t */\n\t\t'path': {\n\t\t\tcolor: 'red', // the color of the solution path that will be drawn\n\t\t\tradius: 10, // the radius in pixels to apply to the solution path\n\t\t\tspeed: 8, // the speed at which the solution path with be drawn\n\t\t\twidth: 3 // the width of the solution path in pixels\n\t\t},\n\t\t// The door identifier for the default starting point\n\t\t'startpoint': function () {\n\t\t\treturn 'startpoint';\n\t\t},\n\t\t// If specified in the wayfinding initialization\n\t\t// route to this point as soon as the maps load. Can be initialized\n\t\t// as a function or a string (for consistency with startpoint)\n\t\t'endpoint': false,\n\t\t// Controls routing through stairs\n\t\t// if true return an accessible route\n\t\t// if false return the shortest route possible\n\t\t'accessibleRoute': false,\n\t\t// Provides the identifier for the map that should be show at startup,\n\t\t// if not given will default to showing first map in the array\n\t\t'defaultMap': function () {\n\t\t\treturn 'map.1';\n\t\t},\n\t\t'loadMessage': 'Loading',\n\t\t// should dataStoreCache should be used\n\t\t// null is cache should not be used\n\t\t// object if cache is being passed\n\t\t// string representing url if it should be used\n\t\t// string is URL path where filename to load will be in the form startpoint + '.json' or startpoint + '.acc.json'\n\t\t'dataStoreCache': null,\n\t\t// place marker for \"you are here\"\n\t\t'showLocation': false,\n\t\t//styling for the \"you are here pin\"\n\t\t'locationIndicator': {\n\t\t\tfill: 'red',\n\t\t\theight: 40\n\t\t},\n\t\t'pinchToZoom': false, // requires jquery.panzoom\n\t\t'zoomToRoute': true,\n\t\t'zoomPadding': 25,\n\t\t// milliseconds to wait during animation when a floor change occurs\n\t\t'floorChangeAnimationDelay': 1250\n\t},\n\tdataStore;\n\n\t// should array of arrays be looked into\n\t// should floor only be stored by id?\n\t// or is it enough that it is already the index of the enclosing array?\n\t// remove portal id strings?\n\n\t/**\n\t * @typedef datastore\n\t * @memberOf plugin\n\t * @type {object}\n\t * @property {floors[]} p holds an array of floors each of which has an array of paths\n\t * @property {portals[]} q holds an array of portals\n\t */\n\n\t/**\n\t * @typedef floors\n\t * @memberOf plugin\n\t * @type {paths[]}\n\t */\n\n\t/**\n\t * @typedef paths\n\t * @memberOf plugin\n\t * @type {object}\n\t * @property {string} floor floor identifier\n\t * @property {float} x on the first end of the path the x coord\n\t * @property {float} y on the first end of the path the y coord\n\t * @property {float} m on the second end of the path the x coord\n\t * @property {float} n on the second end of the path the y coord\n\t * @property {string[]} d an array of doors that connect to the first end of the path\n\t * @property {string[]} e an array of doors that connect to the second end of the path\n\t * @property {string[]} c array of connections to other paths\n\t * @property {string[]} q array of connections to portals\n\t * @property {string} o prior path type \"pa\" or \"po\"\n\t * @property {float} l length of this segment\n\t * @property {float} r current shortest combined lengths to reach here\n\t * @property {string} p prior path segment to follow back for shortest path\n\t */\n\n\t/**\n\t * @todo change floor to f in floors\n\t */\n\n\t/**\n\t * @typedef portals\n\t * @memberOf plugin\n\t * @type {object}\n\t * @property {string} t portal type as string\n\t * @property {boolean} a accessible boolean\n\t * @property {string} f floor of first end as string\n\t * @property {integer} g floor of first end as number\n\t * @property {float} x x coord of first end\n\t * @property {float} y y coord of first end\n\t * @property {float} c connections to paths of first end\n\t * @property {string} j floor of second end as string\n\t * @property {integer} k floor of second end as number\n\t * @property {float} m x coord of second end\n\t * @property {float} n y coord of second end\n\t * @property {string[]} d connections to paths of second end\n\t * @property {float} l length of this segment\n\t * @property {float} r current shortest combined lengths to reach here\n\t * @property {string} p prior path segment to follow back for shortest path\n\t * @property {integer} q prior map number\n\t * @property {string} o prior path type \"pa\" or \"po\"\n\t */\n\n\t/**\n\t * The jQuery plugin namespace.\n\t * @external \"jQuery.fn\"\n\t * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n\t */\n\n\t/**\n\t * Wayfinding\n\t * @function external:\"jQuery.fn\".wayfinding\n\t * @namespace plugin\n\t */\n\n\t$.fn.wayfinding = function (action, options, callback) {\n\t\tvar passed = options,\n\t\t\tobj, // the jQuery object being worked with;\n\t\t\tmaps, // the array of maps populated from options each time\n\t\t\tdefaultMap, // the floor to show at start propulated from options\n\t\t\tstartpoint, // the result of either the options.startpoint value or the value of the function\n\t\t\tportalSegments = [], // used to store portal pieces until the portals are assembled, then this is dumped.\n\t\t\tsolution,\n\t\t\tresult, // used to return non jQuery results\n\t\t\tdrawing;\n\n\n\t\t/**\n\t\t * @function escapeSelector\n\t\t * @memberOf plugin\n\t\t * @private\n\t\t * @inner\n\t\t * @param {string} sel the jQuery selector to escape\n\t\t * @description to handle jQuery selecting ids with periods and other special characters\n\t\t */\n\t\tfunction escapeSelector(sel) {\n\t\t\treturn sel.replace(/(:|\\.|\\[|\\])/g, '\\\\$1');\n\t\t}\n\n\t\t// Applies linear interpolation to find the correct value\n\t\t// for traveling from value oldValue to newValue taking into account\n\t\t// that you are (i / steps) of the way through the process\n\t\tfunction interpolateValue(oldValue, newValue, i, steps) {\n\t\t\treturn (((steps - i) / steps) * oldValue) + ((i / steps) * newValue);\n\t\t}\n\n\t\tfunction CheckMapEmpty(value) {\n\t\t\tthis.value = value;\n\t\t\tthis.message = ' no maps identified in collection to load';\n\t\t\tthis.toString = function() {\n\t\t\t\treturn this.value + this.message;\n\t\t\t};\n\t\t}\n\n\t\tfunction CheckMapDuplicates(value) {\n\t\t\tthis.value = value;\n\t\t\tthis.message = ' has duplicate map ids';\n\t\t\tthis.toString = function() {\n\t\t\t\treturn this.value + this.message;\n\t\t\t};\n\t\t}\n\n\t\tfunction CheckMapBadDefault(value) {\n\t\t\tthis.value = value;\n\t\t\tthis.message = ' wasn\\'t in the list of maps';\n\t\t\tthis.toString = function() {\n\t\t\t\treturn this.value + this.message;\n\t\t\t};\n\t\t}\n\n\t\t// Ensure floor ids are unique.\n\t\tfunction checkIds(el) {\n\t\t\tvar mapNum,\n\t\t\t\tcheckNum,\n\t\t\t\treassign = false,\n\t\t\t\tdefaultMapValid = false,\n\t\t\t\tstatus;\n\n\t\t\tstatus = $(el).find('div')\n\t\t\t\t.hide()\n\t\t\t\t.end()\n\t\t\t\t.append('<div id=\"WayfindingStatus\" style=\"\">' + options.loadMessage + '</div>');\n\n\t\t\tif (maps.length > 0) {\n\t\t\t\tfor (mapNum = 0; mapNum < maps.length; mapNum++) {\n\t\t\t\t\tfor (checkNum = mapNum; checkNum < maps.length; checkNum++) {\n\t\t\t\t\t\tif (mapNum !== checkNum && maps[mapNum].id === maps[checkNum].id) {\n\t\t\t\t\t\t\treassign = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (reassign === true) {\n\t\t\t\t\t$(status).text(options.errorMessage);\n\t\t\t\t\tthrow new CheckMapDuplicates(JSON.stringify(maps));\n\t\t\t\t}\n\n\t\t\t\t//check that defaultMap is valid as well\n\t\t\t\tfor (mapNum = 0; mapNum < maps.length; mapNum++) {\n\t\t\t\t\tif (maps[mapNum].id === defaultMap) {\n\t\t\t\t\t\tdefaultMapValid = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (defaultMapValid === false) {\n\t\t\t\t\t$(status).text(options.errorMessage);\n\t\t\t\t\tthrow new CheckMapBadDefault(defaultMap);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// raise exception about no maps being found\n\t\t\t\t$(status).text(options.errorMessage);\n\t\t\t\tthrow new CheckMapEmpty(JSON.stringify(maps));\n\t\t\t}\n\t\t} //function checkIds\n\n\t\t//Takes x and y coordinates and makes a location indicating pin for those\n\t\t//coordinates. Returns the pin element, not yet attached to the DOM.\n\t\tfunction makePin(x, y, type) {\n\t\t\tvar indicator,\n\t\t\t\tpin,\n\t\t\t\tcircle,\n\t\t\t\theight = options.locationIndicator.height, // add error checking?\n\t\t\t\tsymbolPath;\n\n\t\t\tindicator = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n\n\t\t\t$(indicator).attr('class', type);\n\n\t\t\tpin = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\t\t\tcircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n\n\t\t\tsymbolPath = 'M0.075,0';\n\t\t\tsymbolPath += 'c-2.079-10.207-5.745-18.703-10.186-26.576c-3.295-5.84-7.111-11.23-10.642-16.894c-1.179-1.891-2.196-3.888-3.327-5.85';\n\t\t\tsymbolPath += 'c-2.266-3.924-4.102-8.472-3.984-14.372c0.113-5.766,1.781-10.391,4.186-14.172c3.954-6.219,10.578-11.317,19.465-12.657';\n\t\t\tsymbolPath += 'c7.268-1.095,14.08,0.756,18.911,3.58c3.948,2.31,7.005,5.394,9.329,9.027c2.426,3.793,4.096,8.274,4.236,14.12';\n\t\t\tsymbolPath += 'c0.072,2.995-0.418,5.769-1.109,8.069c-0.699,2.328-1.823,4.274-2.824,6.353c-1.953,4.06-4.4,7.777-6.857,11.498';\n\t\t\tsymbolPath += 'C9.954,-26.789,3.083,-15.486,0.075,0z';\n\n\t\t\tpin.setAttribute('d', symbolPath);\n\t\t\tpin.setAttribute('fill', '#E81E25');\n\t\t\tpin.setAttribute('stroke', '#000000');\n\t\t\tpin.setAttribute('stroke-width', '3.7');\n\t\t\tpin.setAttribute('stroke-miterlimit', '10');\n\n\t\t\tcircle.setAttribute('cx', '0');\n\t\t\tcircle.setAttribute('cy', '-63.757');\n\t\t\tcircle.setAttribute('r', '9.834');\n\n\t\t\tindicator.appendChild(pin);\n\t\t\t//indicator.appendChild(circle);\n\n\t\t\tindicator.setAttribute('transform', 'translate(' + x + ' ' + (y - 10 * (height / 125)) + ') scale(' + height / 125 + ')');\n\n\t\t\treturn indicator;\n\n\t\t} //function makePin\n\n\t\t// Extract data from the svg maps\n\t\tfunction buildDataStore(mapNum, map, el) {\n\t\t\tvar path,\n\t\t\t\tdoorId,\n\t\t\t\tx1,\n\t\t\t\ty1,\n\t\t\t\tx2,\n\t\t\t\ty2,\n\t\t\t\tmatches,\n\t\t\t\tportal,\n\t\t\t\tportalId;\n\n\t\t\t//Paths\n\t\t\tdataStore.p[mapNum] = [];\n\n\t\t\t$('#Paths line', el).each(function () {\n\t\t\t\tpath = {};\n\t\t\t\tpath.floor = map.id; // floor_1\n//\t\t\t\tpath.mapNum = mapNum; // index of floor in array 1\n\t\t\t\tpath.r = Infinity; //Distance\n\t\t\t\tpath.p = -1; //Prior node in path that yielded route distance\n\n\t\t\t\tpath.x = $(this).attr('x1');\n\t\t\t\tpath.y = $(this).attr('y1');\n\t\t\t\tpath.d = [];\n\t\t\t\tpath.m = $(this).attr('x2');\n\t\t\t\tpath.n = $(this).attr('y2');\n\t\t\t\tpath.e = [];\n\t\t\t\tpath.l = Math.sqrt(Math.pow(path.x - path.m, 2) + Math.pow(path.y - path.n, 2));\n\n\t\t\t\tpath.c = []; //other paths\n\t\t\t\tpath.q = []; // connected portals\n\n\t\t\t\tdataStore.p[mapNum].push(path);\n\t\t\t});\n\n\t\t\t//Doors and starting points\n\t\t\t//roomId or POI_Id\n\n\t\t\t$('#Doors line', el).each(function () { // index, line\n\t\t\t\tx1 = $(this).attr('x1');\n\t\t\t\ty1 = $(this).attr('y1');\n\t\t\t\tx2 = $(this).attr('x2');\n\t\t\t\ty2 = $(this).attr('y2');\n\t\t\t\tdoorId = $(this).attr('id');\n\n\t\t\t\t$.each(dataStore.p[mapNum], function (index, segment) {\n\t\t\t\t\tif (map.id === segment.floor && ((segment.x === x1 && segment.y === y1) || (segment.x === x2 && segment.y === y2))) {\n\t\t\t\t\t\tsegment.d.push(doorId);\n\t\t\t\t\t} else if (map.id === segment.floor && ((segment.m === x1 && segment.n === y1) || (segment.m === x2 && segment.n === y2))) {\n\t\t\t\t\t\tsegment.e.push(doorId);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\t//Portal Segments -- string theory says unmatched portal segment useless -- no wormhole\n\n\t\t\t$('#Portals line', el).each(function () { // index, line\n\t\t\t\tportal = {};\n\n\t\t\t\tportalId = $(this).attr('id');\n\n\t\t\t\tif (portalId && portalId.indexOf('_') > -1) {\n\t\t\t\t\tportalId = portalId.slice(0, portalId.indexOf('_'));\n\t\t\t\t}\n\n\t\t\t\tportal.id = portalId;\n\t\t\t\tportal.type = portalId.split('.')[0];\n\t\t\t\tportal.floor = map.id;\n\n\t\t\t\tportal.mate = portalId.split('.').slice(0, 2).join('.') + '.' + map.id;\n\n\t\t\t\tportal.mapNum = mapNum;\n\n\t\t\t\tportal.matched = false;\n\n\t\t\t\tx1 = $(this).attr('x1');\n\t\t\t\ty1 = $(this).attr('y1');\n\t\t\t\tx2 = $(this).attr('x2');\n\t\t\t\ty2 = $(this).attr('y2');\n\n\t\t\t\tmatches = $.grep(dataStore.p[mapNum], function (n) { // , i\n\t\t\t\t\treturn ((x1 === n.x && y1 === n.y) || (x1 === n.m && y1 === n.n));\n\t\t\t\t});\n\n\t\t\t\tif (matches.length !== 0) {\n\t\t\t\t\tportal.x = x1;\n\t\t\t\t\tportal.y = y1;\n\t\t\t\t} else {\n\t\t\t\t\tportal.x = x2;\n\t\t\t\t\tportal.y = y2;\n\t\t\t\t}\n\n\t\t\t\t//portal needs length -- long stairs versus elevator\n\t\t\t\tportal.l = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n\n\t\t\t\tportalSegments.push(portal);\n\t\t\t});\n\t\t} // function buildDataStore\n\n\t\t// after data extracted from all svg maps then build portals between them\n\t\tfunction buildPortals() {\n\n\t\t\tvar segmentOuterNum,\n\t\t\t\tsegmentInnerNum,\n\t\t\t\touterSegment,\n\t\t\t\tinnerSegment,\n\t\t\t\tportal,\n\t\t\t\tmapNum,\n\t\t\t\tpathOuterNum,\n\t\t\t\tpathInnerNum,\n\t\t\t\tportalNum,\n\t\t\t\tpathNum;\n\n\t\t\tfor (segmentOuterNum = 0; segmentOuterNum < portalSegments.length; segmentOuterNum++) {\n\n\t\t\t\touterSegment = portalSegments[segmentOuterNum];\n\n\t\t\t\tif (outerSegment.matched === false) {\n\n\t\t\t\t\tfor (segmentInnerNum = segmentOuterNum; segmentInnerNum < portalSegments.length; segmentInnerNum++) {\n\t\t\t\t\t\tif (portalSegments[segmentInnerNum].id === outerSegment.mate && portalSegments[segmentInnerNum].mate === outerSegment.id) {\n\t\t\t\t\t\t\tinnerSegment = portalSegments[segmentInnerNum];\n\n\t\t\t\t\t\t\tportal = {};\n\n\t\t\t\t\t\t\touterSegment.matched = true;\n\t\t\t\t\t\t\tinnerSegment.matched = true;\n\n\t\t\t\t\t\t\tportal.t = outerSegment.type;\n\t\t\t\t\t\t\tportal.a = (portal.t === 'Elev' || portal.t === 'Door') ? true : false; // consider changing to != Stair\n\n//\t\t\t\t\t\t\tportal.idA = outerSegment.id;\n\t\t\t\t\t\t\tportal.f = outerSegment.floor;\n\t\t\t\t\t\t\tportal.g = outerSegment.mapNum;\n\t\t\t\t\t\t\tportal.x = outerSegment.x;\n\t\t\t\t\t\t\tportal.y = outerSegment.y;\n\t\t\t\t\t\t\tportal.c = []; //only paths\n\n//\t\t\t\t\t\t\tportal.idB = innerSegment.id;\n\t\t\t\t\t\t\tportal.j = innerSegment.floor;\n\t\t\t\t\t\t\tportal.k = innerSegment.mapNum;\n\t\t\t\t\t\t\tportal.m = innerSegment.x;\n\t\t\t\t\t\t\tportal.n = innerSegment.y;\n\t\t\t\t\t\t\tportal.d = []; // only paths\n\n\t\t\t\t\t\t\tportal.l = outerSegment.l + innerSegment.l; // length is combined lengths\n\n\t\t\t\t\t\t\tportal.r = Infinity;\n\t\t\t\t\t\t\tportal.p = -1;\n\n\t\t\t\t\t\t\tdataStore.q.push(portal);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//check each path for connections to other paths\n\t\t\t//checks only possible matchs on same floor, and only for half-1 triangle of search area to speed up search\n\t\t\tfor (mapNum = 0; mapNum < maps.length; mapNum++) {\n\t\t\t\tfor (pathOuterNum = 0; pathOuterNum < dataStore.p[mapNum].length - 1; pathOuterNum++) {\n\t\t\t\t\tfor (pathInnerNum = pathOuterNum + 1; pathInnerNum < dataStore.p[mapNum].length; pathInnerNum++) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dataStore.p[mapNum][pathInnerNum].x === dataStore.p[mapNum][pathOuterNum].x &&\n\t\t\t\t\t\t\tdataStore.p[mapNum][pathInnerNum].y === dataStore.p[mapNum][pathOuterNum].y) ||\n\t\t\t\t\t\t\t\t(dataStore.p[mapNum][pathInnerNum].m === dataStore.p[mapNum][pathOuterNum].x &&\n\t\t\t\t\t\t\t\t\tdataStore.p[mapNum][pathInnerNum].n === dataStore.p[mapNum][pathOuterNum].y) ||\n\t\t\t\t\t\t\t\t(dataStore.p[mapNum][pathInnerNum].x === dataStore.p[mapNum][pathOuterNum].m &&\n\t\t\t\t\t\t\t\t\tdataStore.p[mapNum][pathInnerNum].y === dataStore.p[mapNum][pathOuterNum].n) ||\n\t\t\t\t\t\t\t\t(dataStore.p[mapNum][pathInnerNum].m === dataStore.p[mapNum][pathOuterNum].m &&\n\t\t\t\t\t\t\t\t\tdataStore.p[mapNum][pathInnerNum].n === dataStore.p[mapNum][pathOuterNum].n)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// push onto connections\n\t\t\t\t\t\t\tdataStore.p[mapNum][pathOuterNum].c.push(pathInnerNum);\n\t\t\t\t\t\t\tdataStore.p[mapNum][pathInnerNum].c.push(pathOuterNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//optimize portal searching of paths\n\t\t\tfor (portalNum = 0; portalNum < dataStore.q.length; portalNum++) {\n\t\t\t\tfor (mapNum = 0; mapNum < maps.length; mapNum++) {\n\t\t\t\t\tfor (pathNum = 0; pathNum < dataStore.p[mapNum].length; pathNum++) {\n\t\t\t\t\t\tif (dataStore.q[portalNum].f === dataStore.p[mapNum][pathNum].floor &&\n\t\t\t\t\t\t\t\t((dataStore.q[portalNum].x === dataStore.p[mapNum][pathNum].x &&\n\t\t\t\t\t\t\t\t\tdataStore.q[portalNum].y === dataStore.p[mapNum][pathNum].y) ||\n\t\t\t\t\t\t\t\t\t(dataStore.q[portalNum].x === dataStore.p[mapNum][pathNum].m &&\n\t\t\t\t\t\t\t\t\t\tdataStore.q[portalNum].y === dataStore.p[mapNum][pathNum].n))) {\n\t\t\t\t\t\t\tdataStore.q[portalNum].c.push(pathNum);\n\t\t\t\t\t\t\tdataStore.p[mapNum][pathNum].q.push(portalNum);\n\t\t\t\t\t\t} else if (dataStore.q[portalNum].j === dataStore.p[mapNum][pathNum].floor &&\n\t\t\t\t\t\t\t\t((dataStore.q[portalNum].m === dataStore.p[mapNum][pathNum].x &&\n\t\t\t\t\t\t\t\t\tdataStore.q[portalNum].n === dataStore.p[mapNum][pathNum].y) ||\n\t\t\t\t\t\t\t\t(dataStore.q[portalNum].m === dataStore.p[mapNum][pathNum].m &&\n\t\t\t\t\t\t\t\t\tdataStore.q[portalNum].n === dataStore.p[mapNum][pathNum].n))) {\n\t\t\t\t\t\t\tdataStore.q[portalNum].d.push(pathNum);\n\t\t\t\t\t\t\tdataStore.p[mapNum][pathNum].q.push(portalNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tportalSegments = [];\n\n\t\t} // end function buildportals\n\n\t\t//get the set of paths adjacent to a door or endpoint.\n\t\tfunction getDoorPaths(door) {\n\t\t\tvar mapNum,\n\t\t\t\tpathNum,\n\t\t\t\tdoorANum,\n\t\t\t\tdoorBNum,\n\t\t\t\tdoorPaths = {\n\t\t\t\t\t'paths': [],\n\t\t\t\t\t'floor': null\n\t\t\t\t};\n\n\t\t\tfor (mapNum = 0; mapNum < maps.length; mapNum++) {\n\t\t\t\tfor (pathNum = 0; pathNum < dataStore.p[mapNum].length; pathNum++) {\n\t\t\t\t\tfor (doorANum = 0; doorANum < dataStore.p[mapNum][pathNum].d.length; doorANum++) {\n\t\t\t\t\t\tif (dataStore.p[mapNum][pathNum].d[doorANum] === door) {\n\t\t\t\t\t\t\tdoorPaths.paths.push(pathNum); // only pushing pathNum because starting on a single floor\n\t\t\t\t\t\t\tdoorPaths.floor = dataStore.p[mapNum][pathNum].floor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (doorBNum = 0; doorBNum < dataStore.p[mapNum][pathNum].e.length; doorBNum++) {\n\t\t\t\t\t\tif (dataStore.p[mapNum][pathNum].e[doorBNum] === door) {\n\t\t\t\t\t\t\tdoorPaths.paths.push(pathNum); // only pushing pathNum because starting on a single floor\n\t\t\t\t\t\t\tdoorPaths.floor = dataStore.p[mapNum][pathNum].floor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn doorPaths;\n\t\t}\n\n\t\tfunction recursiveSearch(segmentType, segmentFloor, segment, length) {\n\t\t\t//SegmentType is PAth or POrtal, segment floor limits search, segment is id per type and floor, length is total length of current thread\n\t\t\t// for each path on this floor look at all the paths we know connect to it\n\n\t\t\t// for each connection\n\t\t\t$.each(dataStore.p[segmentFloor][segment].c, function (i, tryPath) {\n\t\t\t\t// check and see if the current path is a shorter path to the new path\n\t\t\t\tif (length + dataStore.p[segmentFloor][tryPath].l < dataStore.p[segmentFloor][tryPath].r) {\n\t\t\t\t\tdataStore.p[segmentFloor][tryPath].r = length + dataStore.p[segmentFloor][tryPath].l;\n\t\t\t\t\tdataStore.p[segmentFloor][tryPath].p = segment;\n\t\t\t\t\tdataStore.p[segmentFloor][tryPath].o = segmentType;\n\t\t\t\t\trecursiveSearch('pa', segmentFloor, tryPath, dataStore.p[segmentFloor][tryPath].r);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// if the current path is connected to any portals\n\t\t\tif (dataStore.p[segmentFloor][segment].q.length > 0) {\n\n\t\t\t\t// look at each portal, tryPortal is portal index in portals\n\t\t\t\t$.each(dataStore.p[segmentFloor][segment].q, function (i, tryPortal) {\n\n\t\t\t\t\tif (length + dataStore.q[tryPortal].l < dataStore.q[tryPortal].r && (options.accessibleRoute === false || (options.accessibleRoute === true && dataStore.q[tryPortal].a))) {\n\t\t\t\t\t\tdataStore.q[tryPortal].r = length + dataStore.q[tryPortal].l;\n\t\t\t\t\t\tdataStore.q[tryPortal].p = segment;\n\t\t\t\t\t\tdataStore.q[tryPortal].q = segmentFloor;\n\t\t\t\t\t\tdataStore.q[tryPortal].o = segmentType;\n\n\t\t\t\t\t\t// if the incoming segment to the portal is at one end of the portal try all the paths at the other end\n\t\t\t\t\t\tif ($.inArray(segment, dataStore.q[tryPortal].c) !== -1) {\n\t\t\t\t\t\t\t$.each(dataStore.q[tryPortal].d, function (ia, tryPath) {\n\t\t\t\t\t\t\t\t//if adding this path\n\t\t\t\t\t\t\t\tif (length + dataStore.q[tryPortal].l + dataStore.p[dataStore.q[tryPortal].k][tryPath].l < dataStore.p[dataStore.q[tryPortal].k][tryPath].r) {\n\t\t\t\t\t\t\t\t\tdataStore.p[dataStore.q[tryPortal].k][tryPath].r = dataStore.q[tryPortal].r + dataStore.p[dataStore.q[tryPortal].k][tryPath].l;\n\t\t\t\t\t\t\t\t\tdataStore.p[dataStore.q[tryPortal].k][tryPath].p = tryPortal;\n\t\t\t\t\t\t\t\t\tdataStore.p[dataStore.q[tryPortal].k][tryPath].o = 'po';\n\t\t\t\t\t\t\t\t\trecursiveSearch('pa', dataStore.q[tryPortal].k, tryPath, dataStore.p[dataStore.q[tryPortal].k][tryPath].r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$.each(dataStore.q[tryPortal].c, function (ib, tryPath) {\n\t\t\t\t\t\t\t\t// if adding this path\n\t\t\t\t\t\t\t\tif (length + dataStore.q[tryPortal].l + dataStore.p[dataStore.q[tryPortal].g][tryPath].l < dataStore.p[dataStore.q[tryPortal].g][tryPath].r) {\n\t\t\t\t\t\t\t\t\tdataStore.p[dataStore.q[tryPortal].g][tryPath].r = dataStore.q[tryPortal].r + dataStore.p[dataStore.q[tryPortal].g][tryPath].l;\n\t\t\t\t\t\t\t\t\tdataStore.p[dataStore.q[tryPortal].g][tryPath].p = tryPortal;\n\t\t\t\t\t\t\t\t\tdataStore.p[dataStore.q[tryPortal].g][tryPath].o = 'po';\n\t\t\t\t\t\t\t\t\trecursiveSearch('pa', dataStore.q[tryPortal].g, tryPath, dataStore.p[dataStore.q[tryPortal].g][tryPath].r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction generateRoutes() {\n\t\t\tvar sourceInfo,\n\t\t\t\tmapNum,\n\t\t\t\tsourcemapNum;\n\n\t\t\tsourceInfo = getDoorPaths(startpoint);\n\n\t\t\tfor (mapNum = 0; mapNum < maps.length; mapNum++) {\n\t\t\t\tif (maps[mapNum].id === sourceInfo.floor) {\n\t\t\t\t\tsourcemapNum = mapNum;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$.each(sourceInfo.paths, function (i, pathId) {\n\t\t\t\tdataStore.p[sourcemapNum][pathId].r = dataStore.p[sourcemapNum][pathId].l;\n\t\t\t\tdataStore.p[sourcemapNum][pathId].p = 'door';\n\t\t\t\trecursiveSearch('pa', sourcemapNum, pathId, dataStore.p[sourcemapNum][pathId].l);\n\t\t\t});\n\t\t}\n\n\n\t\t// from a given end point generate an array representing the reverse steps needed to reach destination along shortest path\n\t\tfunction backTrack(segmentType, segmentFloor, segment) {\n\t\t\tvar step;\n\n\t\t\t// if we aren't at the startpoint point\n\t\t\tif (segment !== 'door') {\n\t\t\t\tstep = {};\n\t\t\t\tstep.type = segmentType;\n\t\t\t\tstep.floor = segmentFloor;\n\t\t\t\tstep.segment = segment;\n\t\t\t\tsolution.push(step);\n\n\t\t\t\tswitch (segmentType) {\n\t\t\t\tcase 'pa':\n\t\t\t\t\tbackTrack(dataStore.p[segmentFloor][segment].o, segmentFloor, dataStore.p[segmentFloor][segment].p);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'po':\n\t\t\t\t\tbackTrack(dataStore.q[segment].o, dataStore.q[segment].q, dataStore.q[segment].p);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getShortestRoute() {\n\n\t\t\tvar destInfo,\n\t\t\t\tmapNum,\n\t\t\t\tdestinationmapNum,\n\t\t\t\treversePathStart,\n\t\t\t\tminPath,\n\t\t\t\ti;\n\n\t\t\tdestInfo = getDoorPaths(options.endpoint);\n\n\t\t\tfor (mapNum = 0; mapNum < maps.length; mapNum++) {\n\t\t\t\tif (maps[mapNum].id === destInfo.floor) {\n\t\t\t\t\tdestinationmapNum = mapNum;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tminPath = Infinity;\n\t\t\treversePathStart = -1;\n\n\t\t\tfor (i = 0; i < destInfo.paths.length; i++) {\n\n\t\t\t\tif (dataStore.p[destinationmapNum][destInfo.paths[i]].r < minPath) {\n\t\t\t\t\tminPath = dataStore.p[destinationmapNum][destInfo.paths[i]].r;\n\t\t\t\t\treversePathStart = destInfo.paths[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (reversePathStart !== -1) {\n\t\t\t\tsolution = []; //can't be set in backtrack because it is recursive.\n\t\t\t\tbackTrack('pa', destinationmapNum, reversePathStart);\n\t\t\t\tsolution.reverse();\n\t\t\t}\n\t\t\treturn solution;\n\t\t}\n\n\t\tfunction build() {\n\n\t\t\tdataStore = {\n\t\t\t\t'p': [], // paths\n\t\t\t\t'q': [] // portals\n\t\t\t};\n\n\t\t\tportalSegments = [];\n\n\t\t\t// Build the dataStore from each map given\n\t\t\t$.each(maps, function(i, map) {\n\t\t\t\t// cleanupSVG(map.el); // commented out as already run by initialize\n\t\t\t\tbuildDataStore(i, map, map.el);\n\t\t\t});\n\n\t\t\tbuildPortals();\n\t\t\tgenerateRoutes();\n\n\t\t\treturn dataStore;\n\t\t} // function build\n\n\t\t// Ensure a dataStore exists and is set, whether from a cache\n\t\t// or by building it.\n\t\tfunction establishDataStore(onReadyCallback) {\n\n\t\t\tif (options.dataStoreCache) {\n\t\t\t\tif (typeof options.dataStoreCache === 'object') {\n\n\t\t\t\t\tdataStore = options.dataStoreCache;\n\n\t\t\t\t\tif(typeof onReadyCallback === 'function') {\n\t\t\t\t\t\tonReadyCallback();\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof options.dataStoreCache === 'string') {\n\t\t\t\t\tvar cacheUrl = options.dataStoreCache + startpoint + ((options.accessibleRoute) ? '.acc' : '') + '.json';\n\n\t\t\t\t\t$.getJSON(cacheUrl, function (response) {\n\n\t\t\t\t\t\tdataStore = response;\n\n\t\t\t\t\t\tif(typeof onReadyCallback === 'function') {\n\t\t\t\t\t\t\tonReadyCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}).fail(function () {\n\n\t\t\t\t\t\tdataStore = build();\n\n\t\t\t\t\t\tif(typeof onReadyCallback === 'function') {\n\t\t\t\t\t\t\tonReadyCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\tdataStore = build();\n\n\t\t\t\tif(typeof onReadyCallback === 'function') {\n\t\t\t\t\tonReadyCallback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set the start point, and put a location indicator\n\t\t// in that spot, if feature is enabled.\n\t\t// if using dataStores then trigger loading of new datastore.\n\t\tfunction setStartPoint(point, el) {\n\t\t\tvar start,\n\t\t\t\tattachPinLocation,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tpin;\n\n\t\t\t//clears locationIndicators from the maps\n\t\t\t$('g.startPin', el).remove();\n\n\t\t\toptions.startpoint = point;\n\n\t\t\t// set startpoint correctly\n\t\t\tif (typeof options.startpoint === 'function') {\n\t\t\t\tstartpoint = options.startpoint();\n\t\t\t} else {\n\t\t\t\tstartpoint = options.startpoint;\n\t\t\t}\n\n\t\t\tif (options.showLocation) {\n\n\t\t\t\tstart = $('#Doors #' + escapeSelector(startpoint), el);\n\n\t\t\t\tvar startMap = el.children().has($('#' + escapeSelector(startpoint)));\n\n\t\t\t\tattachPinLocation = $('svg', startMap).children().last();\n\n\t\t\t\tif (start.length) {\n\t\t\t\t\tx = (Number(start.attr('x1')) + Number(start.attr('x2'))) / 2;\n\t\t\t\t\ty = (Number(start.attr('y1')) + Number(start.attr('y2'))) / 2;\n\n\t\t\t\t\tpin = makePin(x, y, 'startPin');\n\n\t\t\t\t\tattachPinLocation.after(pin);\n\t\t\t\t} else {\n\t\t\t\t\treturn; //start point does not exist\n\t\t\t\t}\n\t\t\t}\n\t\t\t// if (options.dataStoreCache !== null) {\n\t\t\t// \testablishDataStore();\n\t\t\t// }\n\t\t} //function setStartPoint\n\n\t\tfunction setEndPoint(endPoint, el) {\n\t\t\tvar end,\n\t\t\t\tattachPinLocation,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tpin;\n\n\t\t\t//clears locationIndicators from the maps\n\t\t\t$('g.destinationPin', el).remove();\n\n\t\t\tif (options.showLocation) {\n\t\t\t\tend = $('#Doors #' + escapeSelector(endPoint), el);\n\n\t\t\t\t//attachPinLocation = $('svg').has('#Rooms a[id=\"' + escapeSelector(endPoint) + '\"]');\n        var endMap = el.children().has($('#' + escapeSelector(endPoint)));\n        attachPinLocation = $('svg', endMap).children().first();\n\n\t\t\t\tif (end.length) {\n\t\t\t\t\tx = (Number(end.attr('x1')) + Number(end.attr('x2'))) / 2;\n\t\t\t\t\ty = (Number(end.attr('y1')) + Number(end.attr('y2'))) / 2;\n\n\t\t\t\t\tpin = makePin(x, y, 'destinationPin');\n\n\t\t\t\t\tattachPinLocation.append(pin);\n\t\t\t\t} else {\n\t\t\t\t\treturn; //end point does not exist\n\t\t\t\t}\n\t\t\t}\n\t\t} //function setEndPoint\n\n\t\t// Set options based on either provided options or defaults\n\t\tfunction getOptions(el) {\n\t\t\tvar optionsPrior = el.data('wayfinding:options');\n\n\t\t\tdrawing = el.data('wayfinding:drawing'); // load a drawn path, if it exists\n\n\t\t\toptions = $.extend(true, {}, defaults, options);\n\n\t\t\t// check for settings attached to the current object\n\t\t\tif (optionsPrior !== undefined) {\n\t\t\t\toptions = optionsPrior;\n\t\t\t} else {\n\t\t\t\toptions = $.extend(true, {}, defaults, options);\n\t\t\t}\n\n\t\t\t// check for settings attached to the current object\n\t\t\toptions = $.metadata ? $.extend(true, {}, options, el.metadata()) : options;\n\n\t\t\t// Create references to the options\n\t\t\tmaps = options.maps;\n\n\t\t\t// set defaultMap correctly, handle both function and value being passed\n\t\t\tif (typeof options.defaultMap === 'function') {\n\t\t\t\tdefaultMap = options.defaultMap();\n\t\t\t} else {\n\t\t\t\tdefaultMap = options.defaultMap;\n\t\t\t}\n\n\t\t\t// Set startpoint correctly\n\t\t\tif (typeof options.startpoint === 'function') {\n\t\t\t\tstartpoint = options.startpoint();\n\t\t\t} else {\n\t\t\t\tstartpoint = options.startpoint;\n\t\t\t}\n\t\t} //function getOptions\n\n\t\tfunction setOptions(el) {\n\n\t\t\tel.data('wayfinding:options', options);\n\t\t\tel.data('wayfinding:drawing', drawing);\n\t\t\t// need to handle cases where WayfindingDataStore isn't loaded if we are separating these out\n\t\t\tel.data('wayfinding:data', dataStore);\n\t\t}\n\n\t\tfunction cleanupSVG(el) { // should only be called once instead of twice if initalize and build for non datastore\n\t\t\tvar svg = $(el).find('svg');\n\n      svg.attr('height', '100%')\n        .attr('width', '100%')\n        .attr('preserveAspectRatio', 'xMinYMin meet');\n\n\t\t\t// clean up after illustrator -> svg issues\n\t\t\t$('#Rooms a, #Doors line', el).each(function () {\n\t\t\t\tif ($(this).prop('id') && $(this).prop('id').indexOf('_') > 0) {\n\t\t\t\t\tvar oldID = $(this).prop('id');\n\t\t\t\t\t$(this).prop('id', oldID.slice(0, oldID.indexOf('_')));\n\t\t\t\t}\n\t\t\t});\n\t\t} //function cleanupSVG\n\n\t\t// Ensures '$el' has a valid jQuery.panzoom object\n\t\tfunction initializePanZoom(el) {\n\n\t\t\tel.panzoom({\n\t\t\t\tminScale: 1.0,\n\t\t\t\tcontain: 'invert',\n\t\t\t\tcursor: 'pointer'\n\t\t\t});\n\n\t\t\t// Allow clicking on links within the SVG despite $.panZoom()\n\t\t\tel.find('a').on('mousedown touchstart', function(e) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t});\n\t\t} //function initializePanZoom\n\n\t\t// Hide SVG div, hide path lines (they're data, not visuals), make rooms clickable\n\t\tfunction activateSVG(el, svgDiv) {\n\n\t\t\t// Hide maps until explicitly displayed\n\t\t\t$(svgDiv).hide();\n\n\t\t\t// Hide route information\n\t\t\t$('#Paths line', svgDiv).attr('stroke-opacity', 0);\n\t\t\t$('#Doors line', svgDiv).attr('stroke-opacity', 0);\n\t\t\t$('#Portals line', svgDiv).attr('stroke-opacity', 0);\n\n\t\t\t// If #Paths, #Doors, etc. are in a group, ensure that group does _not_\n\t\t\t// have display: none; (commonly set by Illustrator when hiding a layer)\n\t\t\t// and instead add opacity: 0; (which allows for events, unlike display: none;)\n\t\t\t// (A group tag 'g' is used by Illustrator for layers.)\n\t\t\tvar $dataGroup = $('#Paths', svgDiv).parent();\n\t\t\tif($dataGroup.is('g')) {\n\t\t\t\t$dataGroup.attr('opacity', 0).attr('display', 'inline');\n\t\t\t}\n\n\t\t\t// The following need to use the el variable to scope their calls: el is jquery element\n\n\t\t\t// Make rooms clickable\n\t\t\t$('#Rooms a', svgDiv).click(function (event) {\n\t\t\t\t$(el).trigger('wayfinding:roomClicked', [ { roomId: $(this).attr('id') } ] );\n\t\t\t\t$(el).wayfinding('routeTo', $(this).prop('id'));\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\n\t\t\t// Disable clicking on every SVG element except rooms\n\t\t\t$(svgDiv).find('*').css('pointer-events', 'none');\n\t\t\t$('#Rooms a', svgDiv).find('*').css('pointer-events', 'auto');\n\n\t\t\t$(el).append(svgDiv);\n\n\t\t\t// jQuery.panzoom() only works after element is attached to DOM\n\t\t\tif(options.pinchToZoom) {\n\t\t\t\tinitializePanZoom($(svgDiv));\n\t\t\t}\n\t\t} //function activateSVG\n\n\t\t// Called when animatePath() is switching the floor and also when\n\t\tfunction switchFloor(floor, el) {\n\t\t\tvar height = $(el).height();\n\n\t\t\t$(el).height(height); // preserve height as I'm not yet set switching\n\n      $(el).trigger('wayfinding:floorChanged', { mapId: floor });\n\n      $('div', el).hide();\n\n      $('#' + floor, el).fadeIn(200, function() {\n\n        //turn floor into mapNum, look for that in drawing\n        // if there get drawing[level].routeLength and use that.\n\n        var i, level, mapNum, pathLength;\n\n        if (drawing) {\n          mapNum = -1;\n\n          for (i = 0; i < maps.length; i++) {\n            if (maps[i].id === floor) {\n              mapNum = i;\n              break;\n            }\n          }\n\n          level = -1;\n\n          for (i = 0; i < drawing.length; i++) {\n            if (drawing[i][0].floor === mapNum) {\n              level = i;\n              break;\n            }\n          }\n\n          if (level !== -1) {\n            pathLength = drawing[level].routeLength;\n\n            // these next three are potentially redundant now\n            /*\n            $(drawing[level].path, el).attr('stroke-dasharray', [pathLength, pathLength]);\n            $(drawing[level].path, el).attr('stroke-dashoffset', pathLength);\n            $(drawing[level].path, el).attr('pathLength', pathLength);\n            $(drawing[level].path, el).attr('stroke-dashoffset', pathLength);\n\n            $(drawing[level].path, el).animate({svgStrokeDashOffset: 0}, pathLength * options.path.speed); //or move minPath to global variable?\n            */\n          }\n        }\n      });\n\n\t\t} //function switchFloor\n\n\t\tfunction hidePath(el) {\n\t\t\t$('path[class^=directionPath]', el).css({\n\t\t\t\t'stroke': 'none'\n\t\t\t});\n\t\t}\n\n\t\t// Uses jQuery.panzoom to pan/zoom to the SVG viewbox coordinate equivalent of (x, y, w, h)\n\t\tfunction panzoomWithViewBoxCoords(cssDiv, svg, x, y, w, h) {\n\n\t\t\tx = parseFloat(x);\n\t\t\ty = parseFloat(y);\n\t\t\tw = parseFloat(w);\n\t\t\th = parseFloat(h);\n\n\t\t\tvar viewBox = svg.getAttribute('viewBox');\n\t\t\tvar viewX = parseFloat(viewBox.split(/\\s+|,/)[0]); // viewBox is [x, y, w, h], x == [0]\n\t\t\tvar viewY = parseFloat(viewBox.split(/\\s+|,/)[1]);\n\t\t\tvar viewW = parseFloat(viewBox.split(/\\s+|,/)[2]);\n\t\t\tvar viewH = parseFloat(viewBox.split(/\\s+|,/)[3]);\n\n\t\t\tvar cssW = $(cssDiv).width();\n\t\t\tvar cssH = $(cssDiv).height();\n\n\t\t\t// Step 1, determine the scale\n\t\t\tvar scale = Math.min(( viewW / w ), ( viewH / h ));\n\n\t\t\t$(cssDiv).panzoom('zoom', parseFloat(scale));\n\n\t\t\t// Determine bounding box -> CSS coordinate conversion factor\n\t\t\tvar bcX = cssW / viewW;\n\t\t\tvar bcY = cssH / viewH;\n\n\t\t\t// Step 2, determine the focal\n\t\t\tvar bcx = viewX + (viewW / 2); // box center\n\t\t\tvar bcy = viewY + (viewH / 2);\n\n\t\t\tvar fx = (bcx - (x + (w / 2))) * bcX;\n\t\t\tvar fy = (bcy - (y + (h / 2))) * bcY;\n\n\t\t\t// Step 3, apply $.panzoom()\n\t\t\t$(cssDiv).panzoom('pan', fx * scale, fy * scale);\n\t\t}\n\n\t\tfunction animatePath(drawingSegment) {\n\t\t\tvar path,\n\t\t\t\tsvg,\n\t\t\t\tpathRect,\n\t\t\t\tdrawLength,\n\t\t\t\toldViewBox,\n\t\t\t\tanimationDuration,\n\t\t\t\tpad = options.zoomPadding,\n\t\t\t\tsteps = 35,\n\t\t\t\tduration = 650, // Zoom animation in milliseconds\n\t\t\t\toldView = {},\n\t\t\t\tnewView = {},\n\t\t\t\tstep;\n\n\t\t\tfunction adjustIn(current, old, target, count, speed) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar zoomIn = {};\n\t\t\t\t\tzoomIn.X = interpolateValue(old.X, target.X, current, count);\n\t\t\t\t\tzoomIn.Y = interpolateValue(old.Y, target.Y, current, count);\n\t\t\t\t\tzoomIn.W = interpolateValue(old.W, target.W, current, count);\n\t\t\t\t\tzoomIn.H = interpolateValue(old.H, target.H, current, count);\n\n\t\t\t\t\tif(options.pinchToZoom) {\n\t\t\t\t\t\t// Use CSS 3-based zooming\n\t\t\t\t\t\tpanzoomWithViewBoxCoords($(svg).parent()[0], svg, zoomIn.X, zoomIn.Y, zoomIn.W, zoomIn.H);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Use SVG viewBox-based zooming\n\t\t\t\t\t\tsvg.setAttribute('viewBox', zoomIn.X + ' ' + zoomIn.Y + ' ' + zoomIn.W + ' ' + zoomIn.H);\n\t\t\t\t\t}\n\t\t\t\t}, current * (speed / count));\n\t\t\t}\n\n\t\t\tfunction adjustOut(current, old, target, count, speed) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar zoom = {};\n\t\t\t\t\tzoom.X = interpolateValue(target.X, old.X, current, count);\n\t\t\t\t\tzoom.Y = interpolateValue(target.Y, old.Y, current, count);\n\t\t\t\t\tzoom.W = interpolateValue(target.W, old.W, current, count);\n\t\t\t\t\tzoom.H = interpolateValue(target.H, old.H, current, count);\n\n\t\t\t\t\tif(options.pinchToZoom) {\n\t\t\t\t\t\t// Use CSS 3-based zooming\n\t\t\t\t\t\tpanzoomWithViewBoxCoords($(svg).parent()[0], svg, zoom.X, zoom.Y, zoom.W, zoom.H);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsvg.setAttribute('viewBox', zoom.X + ' ' + zoom.Y + ' ' + zoom.W + ' ' + zoom.H);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(current === count) {\n\t\t\t\t\t\tif(drawingSegment === drawing.length) {\n\t\t\t\t\t\t\t$(obj).trigger('wayfinding:animationComplete');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, current * (speed / count));\n\t\t\t}\n\n\t\t\tif (options.repeat && drawingSegment >= drawing.length) {\n\t\t\t\t// if repeat is set, then delay and rerun display from first.\n\t\t\t\t// Don't implement, until we have click to cancel out of this\n\t\t\t\tsetTimeout(function () {\n          console.info('animatePath(): Animating first path.');\n\t\t\t\t\tanimatePath(0);\n\t\t\t\t},\n\t\t\t\t5000);\n        return;\n\t\t\t} else if (drawingSegment >= drawing.length) {\n\t\t\t\t//finished, stop recursion.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar mapIdx = drawing[drawingSegment][0].floor;\n\t\t\tsvg = $('#' + maps[mapIdx].id + ' svg')[0];\n\n\t\t\tdrawLength = drawing[drawingSegment].routeLength;\n\t\t\tanimationDuration = drawLength * options.path.speed;\n\n\t\t\tswitchFloor(maps[drawing[drawingSegment][0].floor].id, obj);\n\n\t\t\t// Get the complete path for this particular floor-route\n\t\t\tpath = $('#' + maps[drawing[drawingSegment][0].floor].id + ' .directionPath' + drawingSegment)[0];\n\n\t\t\t// Animate using CSS transitions\n\t\t\t// SVG animation technique from http://jakearchibald.com/2013/animated-line-drawing-svg/\n\t\t\tpath.style.stroke = options.path.color;\n\t\t\tpath.style.strokeWidth = options.path.width;\n\t\t\tpath.style.transition = path.style.WebkitTransition = 'none';\n\t\t\tpath.style.strokeDasharray = drawLength + ' ' + drawLength;\n\t\t\tpath.style.strokeDashoffset = drawLength;\n\t\t\tpathRect = path.getBBox();\n\t\t\tpath.style.transition = path.style.WebkitTransition = 'stroke-dashoffset ' + animationDuration + 'ms ease';\n\t\t\tpath.style.strokeDashoffset = '0';\n\n\t\t\t// If this is the last segment, trigger the 'wayfinding:animationComplete' event\n\t\t\t// when it finishes drawing.\n\t\t\t// If we're using zoomToRoute however, don't trigger here, trigger when zoomOut is complete (see below)\n\t\t\tif(options.zoomToRoute === false) {\n\t\t\t\tif(drawingSegment === (drawing.length - 1)) {\n\t\t\t\t\t$(path).one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function() {\n\t\t\t\t\t\t$(obj).trigger('wayfinding:animationComplete');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Zooming logic...\n\t\t\t\t// Store the original SVG viewBox in order to zoom out back to it after path animation\n\t\t\t\toldViewBox = svg.getAttribute('viewBox');\n\t\t\t\toldView.X = parseFloat(oldViewBox.split(/\\s+|,/)[0]); // viewBox is [x, y, w, h], x == [0]\n\t\t\t\toldView.Y = parseFloat(oldViewBox.split(/\\s+|,/)[1]);\n\t\t\t\toldView.W = parseFloat(oldViewBox.split(/\\s+|,/)[2]);\n\t\t\t\toldView.H = parseFloat(oldViewBox.split(/\\s+|,/)[3]);\n\n\t\t\t\t// Calculate single step size from each direction\n\t\t\t\tnewView.X = ((pathRect.x - pad) > 0) ? (pathRect.x - pad) : 0;\n\t\t\t\tnewView.Y = ((pathRect.y - pad) > 0) ? (pathRect.y - pad) : 0;\n\t\t\t\tnewView.H = pathRect.height + (2 * pad);\n\t\t\t\tnewView.W = pathRect.width + (2 * pad);\n\n\t\t\t\t// Loop the specified number of steps to create the zoom in animation\n\t\t\t\tfor (step = 0; step <= steps; step++) {\n\t\t\t\t\tadjustIn(step, oldView, newView, steps, duration);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// Call animatePath after 'animationDuration' milliseconds to animate the next segment of the path,\n\t\t\t// if any.\n\t\t\t// Note: This is not tiny path 'segments' which form the lines curving around\n\t\t\t//       hallways but rather the other 'paths' needed on other floors, if any.\n\t\t\tsetTimeout(function () {\n        console.info('animatePath(): Animating next path.');\n\t\t\t\tanimatePath(++drawingSegment);\n\n\t\t\t\tif (options.zoomToRoute) {\n\t\t\t\t\t// Loop the specified number of steps to create the zoom out animation\n\t\t\t\t\t// or set step = steps to force the zoom out immediately (used on floors\n\t\t\t\t\t// no longer visible to the user due to floor changes)\n\n\t\t\t\t\t// Animate zoom out if we're on the last drawing segment, else\n\t\t\t\t\t// we can just reset the zoom out (improves performance, user will never notice)\n\t\t\t\t\tif((drawing.length === 1) || ((drawing.length > 1) && (drawingSegment === drawing.length))) {\n\t\t\t\t\t\tstep = 0; // apply full animation\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstep = steps; // effectively removes animation and resets the zoom out (only triggered on floors where the user\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; step <= steps; step++) {\n\t\t\t\t\t\tadjustOut(step, oldView, newView, steps, duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, animationDuration + options.floorChangeAnimationDelay);\n\t\t} //function animatePath\n\n\t\t// The combined routing function\n\t\t// revise to only interate if startpoint has changed since last time?\n\t\tfunction routeTo(destination, el) {\n\t\t\tvar i,\n\t\t\t\tdraw,\n\t\t\t\tstepNum,\n\t\t\t\tlevel,\n\t\t\t\treversePathStart,\n\t\t\t\tportalsEntered,\n\t\t\t\tlastStep,\n\t\t\t\tax,\n\t\t\t\tay,\n\t\t\t\tbx,\n\t\t\t\tby,\n\t\t\t\taDX,\n\t\t\t\taDY,\n\t\t\t\tbDX,\n\t\t\t\tbDY,\n\t\t\t\tcx,\n\t\t\t\tcy,\n\t\t\t\tpx,\n\t\t\t\tpy,\n\t\t\t\tcurve,\n\t\t\t\tnx,\n\t\t\t\tny,\n\t\t\t\tthisPath,\n\t\t\t\tpick;\n\n\t\t\toptions.endpoint = destination;\n\n\t\t\t// remove any prior paths from the current map set\n\t\t\t$('path[class^=directionPath]', obj).remove();\n\n\t\t\t//clear all rooms\n\t\t\t$('#Rooms *.wayfindingRoom', obj).removeAttr('class');\n\n\t\t\tsolution = [];\n\n\t\t\t//if startpoint != destination\n\t\t\tif (startpoint !== destination) {\n\t\t\t\t// get accessibleRoute option -- options.accessibleRoute\n\n\t\t\t\t//highlight the destination room\n\t\t\t\t//$('#Rooms a[id=\"' + destination + '\"] g', obj).attr('class', 'wayfindingRoom');\n\t\t\t\tsetEndPoint(options.endpoint, el);\n\n\t\t\t\tsolution = getShortestRoute();\n\n\t\t\t\tif (reversePathStart !== -1) {\n\n\t\t\t\t\tportalsEntered = 0;\n\t\t\t\t\t// Count number of portal trips\n\t\t\t\t\tfor (i = 0; i < solution.length; i++) {\n\t\t\t\t\t\tif (solution[i].type === 'po') {\n\t\t\t\t\t\t\tportalsEntered++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//break this into a new function?\n\t\t\t\t\tdrawing = new Array(portalsEntered); // Problem at line 707 character 40: Use the array literal notation [].\n\n\t\t\t\t\tdrawing[0] = [];\n\n\t\t\t\t\t//build drawing and modify solution for text generation by adding .direction to solution segments?\n\n\t\t\t\t\tdraw = {};\n\n\t\t\t\t\tif(solution.length === 0) {\n\t\t\t\t\t\tconsole.warn('Attempting to route with no solution. This should never happen. SVG likely has errors. Destination is: ' + destination);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t//if statement incorrectly assumes one door at the end of the path, works in that case, need to generalize\n\t\t\t\t\tif (dataStore.p[solution[0].floor][solution[0].segment].d[0] === startpoint) {\n\t\t\t\t\t\tdraw = {};\n\t\t\t\t\t\tdraw.floor = solution[0].floor;\n\t\t\t\t\t\tdraw.type = 'M';\n\t\t\t\t\t\tdraw.x = dataStore.p[solution[0].floor][solution[0].segment].x;\n\t\t\t\t\t\tdraw.y = dataStore.p[solution[0].floor][solution[0].segment].y;\n\t\t\t\t\t\tdraw.length = 0;\n\t\t\t\t\t\tdrawing[0].push(draw);\n\t\t\t\t\t\tdraw = {};\n\t\t\t\t\t\tdraw.type = 'L';\n\t\t\t\t\t\tdraw.floor = solution[0].floor;\n\t\t\t\t\t\tdraw.x = dataStore.p[solution[0].floor][solution[0].segment].m;\n\t\t\t\t\t\tdraw.y = dataStore.p[solution[0].floor][solution[0].segment].n;\n\t\t\t\t\t\tdraw.length = dataStore.p[solution[0].floor][solution[0].segment].l;\n\t\t\t\t\t\tdrawing[0].push(draw);\n\t\t\t\t\t\tdrawing[0].routeLength = draw.length;\n\t\t\t\t\t} else if (dataStore.p[solution[0].floor][solution[0].segment].e[0] === startpoint) {\n\t\t\t\t\t\tdraw = {};\n\t\t\t\t\t\tdraw.type = 'M';\n\t\t\t\t\t\tdraw.floor = solution[0].floor;\n\t\t\t\t\t\tdraw.x = dataStore.p[solution[0].floor][solution[0].segment].m;\n\t\t\t\t\t\tdraw.y = dataStore.p[solution[0].floor][solution[0].segment].n;\n\t\t\t\t\t\tdraw.length = 0;\n\t\t\t\t\t\tdrawing[0].push(draw);\n\t\t\t\t\t\tdraw = {};\n\t\t\t\t\t\tdraw.type = 'L';\n\t\t\t\t\t\tdraw.floor = solution[0].floor;\n\t\t\t\t\t\tdraw.x = dataStore.p[solution[0].floor][solution[0].segment].x;\n\t\t\t\t\t\tdraw.y = dataStore.p[solution[0].floor][solution[0].segment].y;\n\t\t\t\t\t\tdraw.length = dataStore.p[solution[0].floor][solution[0].segment].l;\n\t\t\t\t\t\tdrawing[0].push(draw);\n\t\t\t\t\t\tdrawing[0].routeLength = draw.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tlastStep = 1;\n\n\t\t\t\t\t// for each floor that we have to deal with\n\t\t\t\t\tfor (i = 0; i < portalsEntered + 1; i++) {\n\t\t\t\t\t\tfor (stepNum = lastStep; stepNum < solution.length; stepNum++) {\n\t\t\t\t\t\t\tif (solution[stepNum].type === 'pa') {\n\t\t\t\t\t\t\t\tax = dataStore.p[solution[stepNum].floor][solution[stepNum].segment].x;\n\t\t\t\t\t\t\t\tay = dataStore.p[solution[stepNum].floor][solution[stepNum].segment].y;\n\t\t\t\t\t\t\t\tbx = dataStore.p[solution[stepNum].floor][solution[stepNum].segment].m;\n\t\t\t\t\t\t\t\tby = dataStore.p[solution[stepNum].floor][solution[stepNum].segment].n;\n\n\t\t\t\t\t\t\t\tdraw = {};\n\t\t\t\t\t\t\t\tdraw.floor = solution[stepNum].floor;\n\t\t\t\t\t\t\t\tif (drawing[i].slice(-1)[0].x === ax && drawing[i].slice(-1)[0].y === ay) {\n\t\t\t\t\t\t\t\t\tdraw.x = bx;\n\t\t\t\t\t\t\t\t\tdraw.y = by;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdraw.x = ax;\n\t\t\t\t\t\t\t\t\tdraw.y = ay;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdraw.length = dataStore.p[solution[stepNum].floor][solution[stepNum].segment].l;\n\t\t\t\t\t\t\t\tdraw.type = 'L';\n\t\t\t\t\t\t\t\tdrawing[i].push(draw);\n\t\t\t\t\t\t\t\tdrawing[i].routeLength += draw.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (solution[stepNum].type === 'po') {\n\t\t\t\t\t\t\t\tdrawing[i + 1] = [];\n\t\t\t\t\t\t\t\tdrawing[i + 1].routeLength = 0;\n\t\t\t\t\t\t\t\t// push the first object on\n\t\t\t\t\t\t\t\t// check for more than just floor number here....\n\t\t\t\t\t\t\t\tpick = '';\n\t\t\t\t\t\t\t\tif (dataStore.q[solution[stepNum].segment].g === dataStore.q[solution[stepNum].segment].k) {\n\t\t\t\t\t\t\t\t\tif (dataStore.q[solution[stepNum].segment].x === draw.x && dataStore.q[solution[stepNum].segment].y === draw.y) {\n\t\t\t\t\t\t\t\t\t\tpick = 'B';\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpick = 'A';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (dataStore.q[solution[stepNum].segment].g === solution[stepNum].floor) {\n\t\t\t\t\t\t\t\t\t\tpick = 'A';\n\t\t\t\t\t\t\t\t\t} else if (dataStore.q[solution[stepNum].segment].k === solution[stepNum].floor) {\n\t\t\t\t\t\t\t\t\t\tpick = 'B';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (pick === 'A') {\n\t\t\t\t\t\t\t\t\tdraw = {};\n\t\t\t\t\t\t\t\t\tdraw.floor = solution[stepNum].floor;\n\t\t\t\t\t\t\t\t\tdraw.type = 'M';\n\t\t\t\t\t\t\t\t\tdraw.x = dataStore.q[solution[stepNum].segment].x;\n\t\t\t\t\t\t\t\t\tdraw.y = dataStore.q[solution[stepNum].segment].y;\n\t\t\t\t\t\t\t\t\tdraw.length = 0;\n\t\t\t\t\t\t\t\t\tdrawing[i + 1].push(draw);\n\t\t\t\t\t\t\t\t\tdrawing[i + 1].routeLength = draw.length;\n\t\t\t\t\t\t\t\t} else if (pick === 'B') {\n\t\t\t\t\t\t\t\t\tdraw = {};\n\t\t\t\t\t\t\t\t\tdraw.floor = solution[stepNum].floor;\n\t\t\t\t\t\t\t\t\tdraw.type = 'M';\n\t\t\t\t\t\t\t\t\tdraw.x = dataStore.q[solution[stepNum].segment].m;\n\t\t\t\t\t\t\t\t\tdraw.y = dataStore.q[solution[stepNum].segment].n;\n\t\t\t\t\t\t\t\t\tdraw.length = 0;\n\t\t\t\t\t\t\t\t\tdrawing[i + 1].push(draw);\n\t\t\t\t\t\t\t\t\tdrawing[i + 1].routeLength = draw.length;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlastStep = stepNum;\n\t\t\t\t\t\t\t\tlastStep++;\n\t\t\t\t\t\t\t\tstepNum = solution.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//go back through the drawing and insert curves if requested\n\t\t\t\t\t//consolidate colinear line segments?\n\t\t\t\t\tif (options.path.radius > 0) {\n\t\t\t\t\t\tfor (level = 0; level < drawing.length; level++) {\n\t\t\t\t\t\t\tfor (i = 1; i < drawing[level].length - 1; i++) {\n\t\t\t\t\t\t\t\tif (drawing[level][i].type === 'L' && drawing[level][i].type === 'L') {\n\t\t\t\t\t\t\t\t\t// check for colinear here and remove first segment, and add its length to second\n\t\t\t\t\t\t\t\t\taDX = (drawing[level][i - 1].x - drawing[level][i].x);\n\t\t\t\t\t\t\t\t\taDY = (drawing[level][i - 1].y - drawing[level][i].y);\n\t\t\t\t\t\t\t\t\tbDX = (drawing[level][i].x - drawing[level][i + 1].x);\n\t\t\t\t\t\t\t\t\tbDY = (drawing[level][i].y - drawing[level][i + 1].y);\n\t\t\t\t\t\t\t\t\t// if the change in Y for both is Zero\n\t\t\t\t\t\t\t\t\tif ((aDY === 0 && bDY === 0) || (aDX === 0 && bDX === 0) || ((aDX / aDY) === (bDX / bDY) && !(aDX === 0 && aDY === 0 && bDX === 0 && bDY === 0))) {\n\t\t\t\t\t\t\t\t\t\tdrawing[level][i + 1].length = drawing[level][i].length + drawing[level][i + 1].length;\n//                                      drawing[level][i+1].type = \"L\";\n\t\t\t\t\t\t\t\t\t\tdrawing[level].splice(i, 1);\n\t\t\t\t\t\t\t\t\t\ti = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (i = 1; i < drawing[level].length - 1; i++) {\n\t\t\t\t\t\t\t\t// locate possible curves based on both line segments being longer than options.path.radius\n\t\t\t\t\t\t\t\tif (drawing[level][i].type === 'L' && drawing[level][i].type === 'L' && drawing[level][i].length > options.path.radius && drawing[level][i + 1].length > options.path.radius) {\n\t\t\t\t\t\t\t\t\t//save old end point\n\t\t\t\t\t\t\t\t\tcx = drawing[level][i].x;\n\t\t\t\t\t\t\t\t\tcy = drawing[level][i].y;\n\t\t\t\t\t\t\t\t\t// change x,y and change length\n\t\t\t\t\t\t\t\t\tpx = drawing[level][i - 1].x;\n\t\t\t\t\t\t\t\t\tpy = drawing[level][i - 1].y;\n\t\t\t\t\t\t\t\t\t//new=prior + ((center-prior) * ((length-radius)/length))\n\t\t\t\t\t\t\t\t\tdrawing[level][i].x = (Number(px) + ((cx - px) * ((drawing[level][i].length - options.path.radius) / drawing[level][i].length)));\n\t\t\t\t\t\t\t\t\tdrawing[level][i].y = (Number(py) + ((cy - py) * ((drawing[level][i].length - options.path.radius) / drawing[level][i].length)));\n\t\t\t\t\t\t\t\t\t//shorten current line\n\t\t\t\t\t\t\t\t\tdrawing[level][i].length = drawing[level][i].length - options.path.radius;\n\t\t\t\t\t\t\t\t\tcurve = {};\n\t\t\t\t\t\t\t\t\t//curve center is old end point\n\t\t\t\t\t\t\t\t\tcurve.cx = cx;\n\t\t\t\t\t\t\t\t\tcurve.cy = cy;\n\t\t\t\t\t\t\t\t\t//curve end point is based on next line\n\t\t\t\t\t\t\t\t\tnx = drawing[level][i + 1].x;\n\t\t\t\t\t\t\t\t\tny = drawing[level][i + 1].y;\n\t\t\t\t\t\t\t\t\tcurve.x = (Number(cx) + ((nx - cx) * ((options.path.radius) / drawing[level][i + 1].length)));\n\t\t\t\t\t\t\t\t\tcurve.y = (Number(cy) + ((ny - cy) * ((options.path.radius) / drawing[level][i + 1].length)));\n\t\t\t\t\t\t\t\t\t//change length of next segment now that it has a new starting point\n\t\t\t\t\t\t\t\t\tdrawing[level][i + 1].length = drawing[level][i + 1].length - options.path.radius;\n\t\t\t\t\t\t\t\t\tcurve.type = 'Q';\n\t\t\t\t\t\t\t\t\tcurve.floor = drawing[level][i].floor;\n\t\t\t\t\t\t\t\t\t// insert curve element\n\t\t\t\t\t\t\t\t\t// splice function on arrays allows insertion\n\t\t\t\t\t\t\t\t\t//   array.splice(start, delete count, value, value)\n\t\t\t\t\t\t\t\t\t// drawing[level].splice(current line, 0, curve element object);\n\n\t\t\t\t\t\t\t\t\tdrawing[level].splice(i + 1, 0, curve);\n\n\t\t\t\t\t\t\t\t} // both possible segments long enough\n\t\t\t\t\t\t\t} // drawing segment\n\t\t\t\t\t\t} // level\n\t\t\t\t\t} // if we are doing curves at all\n\n\t\t\t\t\t$.each(drawing, function (j, map) {\n\t\t\t\t\t\tvar path = '',\n\t\t\t\t\t\t\tnewPath;\n\t\t\t\t\t\t$.each(map, function (k, stroke) {\n\t\t\t\t\t\t\tswitch (stroke.type) {\n\t\t\t\t\t\t\tcase 'M':\n\t\t\t\t\t\t\t\tpath = 'M' + stroke.x + ',' + stroke.y;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'L':\n\t\t\t\t\t\t\t\tpath += 'L' + stroke.x + ',' + stroke.y;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Q':\n\t\t\t\t\t\t\t\tpath += 'Q' + stroke.cx + ',' + stroke.cy + ' ' + stroke.x + ',' + stroke.y;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tnewPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\t\t\t\t\t\tnewPath.setAttribute('d', path);\n            newPath.setAttribute('id', 'directionPath' + j);\n\t\t\t\t\t\tnewPath.style.fill = 'none';\n\n\t\t\t\t\t\tif (newPath.classList) {\n\t\t\t\t\t\t\tnewPath.classList.add('directionPath' + j);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewPath.setAttribute('class', 'directionPath' + j);\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Attach the newpath to the startpin or endpin if they exist on this floor\n\t\t\t\t\t\tvar attachPointSvg = $('#' + maps[map[0].floor].id + ' svg');\n\t\t\t\t\t\tvar startPin = $('.startPin', attachPointSvg);\n\t\t\t\t\t\tvar destinationPin = $('.destinationPin', attachPointSvg);\n\n\t\t\t\t\t\tif (startPin.length) {\n\t\t\t\t\t\t\tstartPin.before(newPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (destinationPin.length) {\n\t\t\t\t\t\t\tdestinationPin.before(newPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tattachPointSvg.append(newPath);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthisPath = $('#' + maps[map[0].floor].id + ' svg .directionPath' + j);\n\n\t\t\t\t\t\tdrawing[j].path = thisPath;\n\n\t\t\t\t\t});\n\n\t\t\t\t\tsetTimeout(function() {\n            console.info('routeTo(): Animating first path.');\n            animatePath(0);\n          }, options.floorChangeAnimationDelay);\n\n\t\t\t\t\t//on switch which floor is displayed reset path svgStrokeDashOffset to minPath and the reanimate\n\t\t\t\t\t//notify animation loop?\n\t\t\t\t}\n\t\t\t}\n\t\t} //RouteTo\n\n\t\tfunction replaceLoadScreen(el) {\n\t\t\tvar displayNum,\n\t\t\t\tmapNum;\n\n\t\t\t$('#WayfindingStatus').remove();\n\n\t\t\t// loop ensures defaultMap is in fact one of the maps\n\t\t\tdisplayNum = 0;\n\t\t\tfor (mapNum = 0; mapNum < maps.length; mapNum++) {\n\t\t\t\tif (defaultMap === maps[mapNum].id) {\n\t\t\t\t\tdisplayNum = mapNum;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// highlight starting floor\n\t\t\t$('#' + maps[displayNum].id, el).show();\n\n\t\t\t$(el).trigger('wayfinding:mapsVisible');\n\n\t\t\t// if endpoint was specified, route to there.\n\t\t\tif (typeof options.endpoint === 'function') {\n\t\t\t\trouteTo(options.endpoint(), el);\n\t\t\t} else if (typeof options.endpoint === 'string') {\n\t\t\t\trouteTo(options.endpoint, el);\n\t\t\t}\n\n\t\t\t$.event.trigger('wayfinding:ready');\n\t\t} //function replaceLoadScreen\n\n\t\t// Initialize the jQuery target object\n\t\tfunction initialize(el, cb) {\n\t\t\tvar mapsProcessed = 0;\n\n\t\t\t$('div:not(\"#WayfindingStatus\")', el).remove();\n\n\t\t\t// Load SVGs off the network\n\t\t\t$.each(maps, function (i, map) {\n\n\t\t\t\tvar svgDiv = $('<div id=\"' + map.id + '\"><\\/div>');\n\n\t\t\t\t//create svg in that div\n\t\t\t\tsvgDiv.load(\n\t\t\t\t\tmap.path,\n\t\t\t\t\tfunction (svg, status) {\n\t\t\t\t\t\tif (status === 'error') {\n\t\t\t\t\t\t\tsvgDiv.html('<p class=\"text-center text-danger\">Map ' + i + ' Was not found at ' +\n\t\t\t\t\t\t\t\tmap.path + '<br />Please upload it in the administration section</p>');\n\t\t\t\t\t\t\tmaps[i].el = svgDiv;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmaps[i].svgHandle = svg;\n\t\t\t\t\t\t\tmaps[i].el = svgDiv;\n\n\t\t\t\t\t\t\tcleanupSVG(maps[i].el);\n\n\t\t\t\t\t\t\tactivateSVG(el, svgDiv);\n\n\t\t\t\t\t\t\tmapsProcessed += 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(mapsProcessed === maps.length) {\n\t\t\t\t\t\t\t// All SVGs have finished loading\n\t\t\t\t\t\t\testablishDataStore(function() {\n\t\t\t\t\t\t\t\t// SVGs are loaded, dataStore is set, ready the DOM\n\t\t\t\t\t\t\t\tsetStartPoint(startpoint, el);\n\t\t\t\t\t\t\t\tsetOptions(el);\n\t\t\t\t\t\t\t\treplaceLoadScreen(el);\n\t\t\t\t\t\t\t\tif (typeof cb === 'function') {\n\t\t\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t} // function initialize\n\n\t\tif (action && typeof (action) === 'object') {\n\t\t\tif (typeof options === 'function') {\n\t\t\t\tcallback = options;\n\t\t\t}\n\t\t\toptions = action;\n\t\t\tpassed = action;\n\t\t\taction = 'initialize';\n\t\t}\n\n\t\t// for each jQuery target object\n\t\tthis.each(function () {\n\t\t\t// store reference to the currently processing jQuery object\n\t\t\tobj = $(this);\n\n\t\t\tgetOptions(obj); // load the current options\n\n\t\t\t// Handle actions\n\t\t\tif (action && typeof (action) === 'string') {\n\t\t\t\tswitch (action) {\n\n\t\t\t\t/**\n\t\t\t\t * @function wayfinding\n\t\t\t\t * @memberOf wayfinding\n\t\t\t\t * @param {object} settings an object holding the settings to initialize the plugin with\n\t\t\t\t * @param {function} [callback] optional callback that gets called once setup is completed.\n\t\t\t\t * @example\n\t\t\t\t * $('#myMaps').wayfinding({\n\t\t\t\t * \t'maps': [\n\t\t\t\t * \t\t{'path': 'test/fixtures/demo_map_1.svg', 'id': 'floor1'},\n\t\t\t\t * \t\t{'path': 'test/fixtures/demo_map_2.svg', 'id': 'floor2'}\n\t\t\t\t * \t],\n\t\t\t\t * \t'startpoint': function () {\n\t\t\t\t * \t\treturn 'lcd.1';\n\t\t\t\t * \t},\n\t\t\t\t * \t'defaultMap': 'floor1',\n\t\t\t\t * }, function(){\n\t\t\t\t * \tconsole.log('callback reached');\n\t\t\t\t * });\n\t\t\t\t */\n\n\t\t\t\t/**\n\t\t\t\t * @todo build out the rest of the options in the non maps version of the call\n\t\t\t\t */\n\n\t\t\t\tcase 'initialize':\n\t\t\t\t\tif (passed && passed.maps) {\n\t\t\t\t\t\tcheckIds(obj);\n\t\t\t\t\t\tinitialize(obj, callback);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (passed && passed.showLocation !== undefined) {\n\t\t\t\t\t\t\toptions.showLocation = passed.showLocation;\n\t\t\t\t\t\t\tsetStartPoint(options.startpoint, obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t/**\n\t\t\t\t * @function routeTo\n\t\t\t\t * @name routeTo\n\t\t\t\t * @public\n\t\t\t\t * @memberOf wayfinding\n\t\t\t\t * @example $('target').wayfinding('routeTo', 'doorID');\n\t\t\t\t */\n\t\t\t\tcase 'routeTo':\n\t\t\t\t\t// call method\n\t\t\t\t\trouteTo(passed, obj);\n\t\t\t\t\tbreak;\n\n\t\t\t\t/**\n\t\t\t\t * @function animatePath\n\t\t\t\t * @memberOf wayfinding\n\t\t\t\t * @example $('target').wayfinding('animatePath');\n\t\t\t\t */\n\t\t\t\t/**\n\t\t\t\t * @todo add callback to animatePath\n\t\t\t\t */\n\t\t\t\tcase 'animatePath':\n\t\t\t\t\thidePath(obj);\n          console.info('initialize(): Animating first path.');\n\t\t\t\t\tanimatePath(0);\n\t\t\t\t\tbreak;\n\n\t\t\t\t/**\n\t\t\t\t * @function startpoint\n\t\t\t\t * @memberOf wayfinding\n\t\t\t\t * @param {string} newStartPoint a door ID specifying a new starting location\n\t\t\t\t * @param {function} [callback]\n\t\t\t\t * @example $('target').wayfinding('startpoint', 'R1001');\n\t\t\t\t */\n\n\t\t\t\t/**\n\t\t\t\t * @function startpoint\n\t\t\t\t * @memberOf wayfinding\n\t\t\t\t * @param {function} newStartPointFunction a door ID specifying a new starting location\n\t\t\t\t * @param {function} [callback]\n\t\t\t\t * @example $('target').wayfinding('startpoint', startpointFunction);\n\t\t\t\t */\n\t\t\t\tcase 'startpoint':\n\t\t\t\t\t// change the startpoint or startpoint for the instruction path\n\t\t\t\t\tif (passed === undefined) {\n\t\t\t\t\t\tresult = startpoint;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetStartPoint(passed, obj);\n\t\t\t\t\t\testablishDataStore(callback);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'currentMap':\n\t\t\t\t\t// return and set\n\t\t\t\t\tif (passed === undefined) {\n\t\t\t\t\t\tresult = $('div:visible', obj).prop('id');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitchFloor(passed, obj);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'accessibleRoute':\n\t\t\t\t\t// return and set\n\t\t\t\t\tif (passed === undefined) {\n\t\t\t\t\t\tresult = options.accessibleRoute;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.accessibleRoute = passed;\n\t\t\t\t\t\testablishDataStore(callback);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t/**\n\t\t\t\t * @function path\n\t\t\t\t * @name path\n\t\t\t\t * @memberOf wayfinding\n\t\t\t\t * @Returns optional path if no param is passed\n\t\t\t\t * @example getPath = $('target').wayfinding('path');\n\t\t\t\t */\n\n\t\t\t\t/**\n\t\t\t\t * @function path\n\t\t\t\t * @name path\n\t\t\t\t * @memberOf wayfinding\n\t\t\t\t * @param {pathtype} nameNotSpecified sets options.path\n\t\t\t\t * @Returns optional path if no param is passed\n\t\t\t\t */\n\n\t\t\t\tcase 'path':\n\t\t\t\t\t// return and set\n\t\t\t\t\tif (passed === undefined) {\n\t\t\t\t\t\tresult = options.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.path = $.extend(true, {}, options.path, passed);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t/**\n\t\t\t\t * @function getDataStore\n\t\t\t\t * @name getDataStore\n\t\t\t\t * @memberOf wayfinding\n\t\t\t\t * @returns {string} a JSON object representing the current state of the map for a given startpoint and accessibility setting\n\t\t\t\t * @example capture = $('target').wayfinding('getDataStore');\n\t\t\t\t */\n\n\t\t\t\tcase 'getDataStore':\n\t\t\t\t\t//shows JSON version of dataStore when called from console.\n\t\t\t\t\t//To facilitate caching dataStore.\n\t\t\t\t\tresult = JSON.stringify(dataStore);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'destroy':\n\t\t\t\t\t//remove all traces of wayfinding from the obj\n\t\t\t\t\t$(obj).remove();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetOptions(obj);\n\t\t});\n\n\t\tif (result !== undefined) {\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this;\n\t};\n})(jQuery);\n//  ]]>\n"]}